{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","foundUser","users","find","userId","completed","title","TodoList","todos","map","App","useState","setTitle","selectedUser","setSelectedUser","titleError","setTitleError","userError","setUserError","onSubmit","event","preventDefault","usersFromServer","newId","Math","max","todosFromServer","push","action","method","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1dbdf6bb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../Types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <>\n      <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n        {user.name}\n      </a>\n    </>\n  );\n};\n","import { Todo } from '../../Types/Todo';\nimport users from '../../api/users';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nconst TodoInfo: React.FC<Props> = ({ todo }) => {\n  const foundUser = users.find(user => user.id === todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed\n    && 'TodoInfo--completed'}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {foundUser && <UserInfo user={foundUser} />}\n    </article>\n  );\n};\n\nexport default TodoInfo;\n","import { Todo } from '../../Types/Todo';\nimport TodoInfo from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { FormEventHandler, useState } from 'react';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [userError, setUserError] = useState('');\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n\n    const foundUser = usersFromServer.find(user => user.name === selectedUser);\n    const newId = Math.max(...todosFromServer.map(todo => todo.id));\n\n    if (!title) {\n      setTitleError('Please enter a title');\n    }\n\n    if (!selectedUser) {\n      setUserError('Please choose a user');\n    }\n\n    if (title && selectedUser && foundUser) {\n      todosFromServer.push({\n        id: newId + 1,\n        title,\n        completed: false,\n        userId: foundUser.id,\n      });\n\n      setTitle('');\n      setSelectedUser('');\n    }\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n\n    setTitleError('');\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(event.target.value);\n\n    setUserError('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmit} action=\"/api/todos\" method=\"POST\">\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitle}\n          />\n          <span className=\"error\">{titleError}</span>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={selectedUser}\n            onChange={handleUser}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          <span className=\"error\">{userError}</span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosFromServer} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}